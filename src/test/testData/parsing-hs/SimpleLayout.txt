Haskell file
  HS_FILE_HEADER
    <empty list>
  HS_MODULE_BODY
    HS_MODULE_DECLARATION
      PsiElement(HaskellTokenType.MODULE)('module')
      PsiWhiteSpace(' ')
      HaskellVarid(HS_MODID)
        HaskellVarid(HS_CONID)
          PsiElement(HaskellTokenType.CON_ID)('TestModule')
      PsiWhiteSpace(' ')
      HS_WHERE_CLAUSE
        PsiElement(HaskellTokenType.WHERE)('where')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        HS_TOP_DECLARATION
          HS_TYPE_SIGNATURE
            HS_Q_NAMES
              HS_Q_NAME
                HS_VAR_CON
                  HaskellVarid(HS_VARID)
                    PsiElement(HaskellTokenType.VAR_ID)('these')
            PsiWhiteSpace(' ')
            PsiElement(HaskellTokenType.COLON_COLON)('::')
            PsiWhiteSpace(' ')
            HS_TTYPE
              HS_Q_NAME
                HS_VAR_CON
                  HaskellVarid(HS_VARID)
                    PsiElement(HaskellTokenType.VAR_ID)('declarations')
              PsiWhiteSpace(' ')
              HS_Q_NAME
                HS_VAR_CON
                  HaskellVarid(HS_VARID)
                    PsiElement(HaskellTokenType.VAR_ID)('are')
        PsiWhiteSpace('\n')
        PsiWhiteSpace(' ')
        HS_TOP_DECLARATION
          HS_ATOM_EXPRESSION
            HS_Q_NAME
              HS_VAR_CON
                HaskellVarid(HS_VARID)
                  PsiElement(HaskellTokenType.VAR_ID)('insideOfALayout')
        PsiWhiteSpace(' ')
        HS_TOP_DECLARATION
          HS_ATOM_EXPRESSION
            PsiElement(HaskellTokenType.EQUAL)('=')
        PsiWhiteSpace(' ')
        HS_TOP_DECLARATION
          HS_LET_ABSTRACTION
            PsiElement(HaskellTokenType.LET)('let')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('   ')
            HS_CDECL
              HS_CIDECL
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('test')
                PsiWhiteSpace(' ')
                PsiElement(HaskellTokenType.EQUAL)('=')
                PsiWhiteSpace(' ')
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('bla')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('   ')
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('reTest')
                PsiWhiteSpace(' ')
                PsiElement(HaskellTokenType.EQUAL)('=')
                PsiWhiteSpace(' ')
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('blllaaa')
                PsiWhiteSpace('\n')
                PsiWhiteSpace(' ')
                PsiElement(HaskellTokenType.IN)('in')
                PsiWhiteSpace(' ')
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('test')
                PsiWhiteSpace(' ')
                HS_Q_NAME
                  HS_VAR_CON
                    HaskellVarid(HS_VARID)
                      PsiElement(HaskellTokenType.VAR_ID)('reTest')